# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import re

import aiogram
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import StatesGroup, State
from yarl import URL

from urllib.parse import urlparse

def is_url(url):
  try:
    result = urlparse(url)
    return all([result.scheme, result.netloc])
  except ValueError:
    return False

# id —Å—Ç–∏–∫–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
hello_stickers = ['CAACAgIAAxkBAAEEcyJiVZ0sqQenNM6ER3msbikbMsJQRQACjQgAAnlc4gk0y_uYceajxCME',
                  'CAACAgIAAxkBAAEEcyRiVZ05qVBBZCZWl2vJqtB29m2c3wACuAIAAi8P8AZAVAABvGPVXi0jBA',
                  'CAACAgIAAxkBAAEEcyZiVZ0_fXCHKi8LKFy8D9toFATobAAC2BAAAtdt6ElpkxDUVhg6hiME',
                  'CAACAgIAAxkBAAEEcyhiVZ1N7g-hvCcLGlMrv79yYL307wACkQ8AAo7aAAFIhPeRyUFm2n4jBA',
                  'CAACAgIAAxkBAAEEc8JiVblNOQjWQwi-AAFpfpsCV2qI0-gAAt0IAAIvD_AGmMS8ln43Y24jBA']
# id —Å—Ç–∏–∫–µ—Ä–æ–≤ –¥–ª—è –ø—Ä–æ—â–∞–Ω–∏—è
bye_stickers = ['CAACAgIAAxkBAAEEc7ZiVbi1fX8ZQTbxqCqQedyR3D6VbwACiQgAAnlc4gno718mBrqFJCME',
                'CAACAgIAAxkBAAEEc7hiVbkGZZLQnFJTu10mut7vuleOQAACdg8AAkBRQUh9kH8FliezaSME',
                'CAACAgIAAxkBAAEEc7xiVbktrhcTsMo1HUGqEhCSgJnw4gAC7hYAAqM8sUoj812lcIro3SME',
                'CAACAgIAAxkBAAEEc8RiVblXkMSCYLF4Cg-k0USm0kQnFQACwgIAAi8P8AYM1RNBJvF3CyME']


def create_start_msg(user_name):
    msg = f'–ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n' \
          f'–ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã –æ–±—Ä–∞—Ç–∏–ª—Å—è –∫ –Ω–∞–º –∑–∞ –ø–æ–º–æ—â—å—é! –í –Ω–∞—à–µ–º –Ω–∞—Å—Ç–æ–ª–æ—á–Ω–æ–º –±–æ—Ç–µ {"üé≤"} —Ç—ã –º–æ–∂–µ—à—å —Å–¥–∞—Ç—å –∏–ª–∏ –≤–∑—è—Ç—å –≤ –∞—Ä–µ–Ω–¥—É ' \
          f'–ª—é–±—É—é –Ω–∞—Å—Ç–æ–ª—å–Ω—É—é –∏–≥—Ä—É!\n\n' \
          f'–í—Å–µ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ:\n\n' \
          f'1)¬´–ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –Ω–∞—Å—Ç–æ–ª–∫—É¬ª - –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞. {"‚åõ"} \n\n' \
          f'2)¬´–°–¥–∞—Ç—å –Ω–∞—Å—Ç–æ–ª–∫—É¬ª - –ø–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –≤–ª–∞–¥–µ–ª—å—Ü–∞. {"üì¶"}\n\n' \
          f'3)¬´–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –±–æ—Ç–µ¬ª - –≤—ã–≤–µ—Å—Ç–∏ –ø–æ—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ. {"üßê"} \n\n' \
          f'4)¬´–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é¬ª - –≤—ã–π—Ç–∏ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. {"üîô"} \n\n'
    return msg


def create_bot_info_msg():
    msg = f'–ê—Ä–µ–Ω–¥—É–π—Ç–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ —á–∞—Ç-–±–æ—Ç–∞! \n\n' \
          f'–£ –≤–∞—Å –µ—Å—Ç—å –∂–µ–ª–∞–Ω–∏–µ —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –Ω–∞—Å—Ç–æ–ª–∫—É, –Ω–æ –Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –µ–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?' \
          f'–ù–∞—à –±–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ –∏–≥—Ä—ã –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤, ' \
          f'–∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏, –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏ –∞–Ω—Ç–∏-–∫–∞—Ñ–µ! \n\n' \
          f'‚Ä¢ –ë–æ–ª—å—à–æ–π –≤—ã–±–æ—Ä –∏–≥—Ä –æ—Ç –º–∞–≥–∞–∑–∏–Ω–æ–≤, –∞–Ω—Ç–∏-–∫–∞—Ñ–µ –∏ –∑–∞—è–¥–ª—ã—Ö –∫–æ–ª–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤ \n\n' \
          f'‚Ä¢ –£–¥–æ–±–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞—Ä–µ–Ω–¥–∞ \n\n' \
          f'‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –≥–∞—Ä–∞–Ω—Ç–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã'
    return msg

def create_delivery_msg():
    msg = f'–î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å—Ç–æ—Ä–æ–Ω–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ (–î–æ—Å—Ç–∞–≤–∏—Å—Ç–∞, –Ø–Ω–¥–µ–∫—Å –î–æ—Å—Ç–∞–≤–∫–∞).'
    return msg

def create_payment_msg():
    msg = f'–û–ø–ª–∞—Ç–∞ \n' \
          f'üí≥ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã \n\n' \
          f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–π –∫–∞—Ä—Ç—ã.' \
          f'–ß—Ç–æ –±—ã –∑–¥–µ—Å—å –ø–æ—è–≤–∏–ª—Å—è —Å–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç, –∑–∞–∫–∞–∂–∏—Ç–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—É—é –∏–≥—Ä—É –∏–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å, –ø–æ–∫–∞ –∞—Ä–µ–Ω–¥—É—é—Ç –≤–∞—à—É.\n' \
          f'–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –æ–ø–ª–∞—Ç—ã –¢–µ–ª–µ–≥—Ä–∞–º–º–∞, –ø–æ—ç—Ç–æ–º—É –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'
    return msg

def create_faq_msg():
    msg = f'–£ –º–∞—Ç—Ä–æ—Å–æ–≤ –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤!üôÉ'
    return msg

def create_first_player_msg():
    msg =   f'–ü–µ—Ä–≤–∞—è –∞—Ä–µ–Ω–¥–∞! \n\n' \
            f'–ù–∞—Å—Ç–æ–ª–∫–∏ ‚Äì —ç—Ç–æ –∫—Ä—É—Ç–æ! –£ –Ω–∞—Å –æ–≥—Ä–æ–º–Ω–∞—è –±–∞–∑–∞, —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–π–¥–µ—à—å —Å–≤–æ—ë üíû \n\n' \
            f'–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ç–µ–±–µ –ø–æ –¥—É—à–µ: '
    return msg

def create_random_board_game_msg():
    msg =   f'–†–∞–Ω–¥–æ–º \n\n' \
            f'–ù–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å? –ë—Ä–æ—Å—å –∫—É–±–∏–∫ –∏ –ø–æ–ª–æ–∂–∏—Å—å –Ω–∞ —É–¥–∞—á—É üé≤ \n\n'
    return msg

def create_before_check_order_details_msg():
    msg =   f'üèÅ –û—Ç–ª–∏—á–Ω–æ! \n\n' \
            f'–ú—ã –ø–æ—á—Ç–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏, –æ—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞.'
    return msg

def create_check_order_details_msg(order_id, list_of_board_games,
                                   delivery_date, return_date , owner):

    msg =   f"üì¶ '\033[0m' + –ó–∞–∫–∞–∑ #{order_id} \n" \
            f'üìÜ –° {delivery_date} –ø–æ {return_date} \n' \
            f'–°—Ç–∞—Ç—É—Å: **–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ **, \n\n' \
            f"'\033[0m' + –°–æ—Å—Ç–∞–≤ \n" \

    for i in range(len(list_of_board_games)):
        msg += f'‚òëÔ∏è {list_of_board_games[i]} \n'


    msg += f'ü¶Ñ –í–ª–∞–¥–µ–ª–µ—Ü {owner}'
    return msg

rent_add_text = "–û, –ù–∞—Å—Ç–æ–ª–æ—á–Ω—ã–π –í–ª–∞–¥—ã–∫–∞!\n" \
                "–ü—Ä–∏—à–ª–∞ –ø–æ—Ä–∞ —Å—Ç–µ—Ä–µ—Ç—å –ø—ã–ª—å —Å –∫–æ—Ä–æ–±–æ–∫ üåö\n\n" \
                "–î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –Ω–∞—Å—Ç–æ–ª–∫—É –≤ –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞–∑–Ω–∞—á—å—Ç–µ —Ü–µ–Ω—É üí∞"


def getDescGame(json):
    if is_url(json['Rools']):
        return f'üì¶–ù–∞–∑–≤–∞–Ω–∏–µ: {json["Status"]} {json["Rating"]}‚≠ê\n\n' \
               f'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: \n {json["Description"]}\n\n' \
               f'üïê {json["Middle_game_time"]} –º–∏–Ω\n' \
               f'üë• {json["Min_players"]}-{json["Max_players"]} –∏–≥—Ä–æ–∫–æ–≤\n' \
               f'‚ö† –í–æ–∑—Ä–∞—Å—Ç +{json["Age"]}\n' \
               f'üí° {json["Category"]} —Å–ª–æ–∂–Ω–æ—Å—Ç—å\n\n' \
               f"üìú <a href='{json['Rools']}'>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞</a>\n" \
               f'üí∞ –¶–µ–Ω–∞: {json["Price_per_day"]}/—Ä—É–±–ª–µ–π –≤ –¥–µ–Ω—å'
    else:
        return f'üì¶–ù–∞–∑–≤–∞–Ω–∏–µ: {json["Status"]} {json["Rating"]}‚≠ê\n\n' \
               f'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: \n {json["Description"]}\n\n' \
               f'üïê {json["Middle_game_time"]} –º–∏–Ω\n' \
               f'üë• {json["Min_players"]}-{json["Max_players"]} –∏–≥—Ä–æ–∫–æ–≤\n' \
               f'‚ö† –í–æ–∑—Ä–∞—Å—Ç +{json["Age"]}\n' \
               f'üí° {json["Category"]} —Å–ª–æ–∂–Ω–æ—Å—Ç—å\n\n' \
               f'üí∞ –¶–µ–Ω–∞: {json["Price_per_day"]}/—Ä—É–±–ª–µ–π –≤ –¥–µ–Ω—å'


def getDescGameFromClass(json):
    return f'üì¶–ù–∞–∑–≤–∞–Ω–∏–µ: {json["name"]} {json["rating"]}‚≠ê\n\n' \
           f'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: \n {json["desc"]}\n\n' \
           f'üïê {json["timeGame"]} –º–∏–Ω\n' \
           f'üë• {json["minCountPlayers"]}-{json["maxCountPlayers"]} –∏–≥—Ä–æ–∫–æ–≤\n' \
           f'‚ö† –í–æ–∑—Ä–∞—Å—Ç +{json["age"]}\n' \
           f'üí° {json["category"]} —Å–ª–æ–∂–Ω–æ—Å—Ç—å\n\n' \
           f"üìú <a href='{json['rules']}'>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞</a>\n" \
           f'üí∞ –¶–µ–Ω–∞: {json["price"]}/—Ä—É–±–ª–µ–π –≤ –¥–µ–Ω—å'



class BoardGame(StatesGroup):
    name = State()
    desc = State()
    image = State()
    filter = State()
    category = State()
    price = State()
    end = State()

def getDescGameFrom(boardGame):
    return f'üì¶–ù–∞–∑–≤–∞–Ω–∏–µ: {boardGame["name"]}\n\n' \
           f'–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: \n {boardGame["desc"]}\n\n' \
           f'üí° {boardGame["category"]} —Å–ª–æ–∂–Ω–æ—Å—Ç—å\n\n' \
           f'üí∞ –¶–µ–Ω–∞: {boardGame["price"]}/—Ä—É–±–ª–µ–π –≤ –¥–µ–Ω—å'


emoji_pattern = re.compile("["
        u"\U0001F600-\U0001F64F"  # emoticons
        u"\U0001F300-\U0001F5FF"  # symbols & pictographs
        u"\U0001F680-\U0001F6FF"  # transport & map symbols
        u"\U0001F1E0-\U0001F1FF"  # flags (iOS)
                           "]+", flags=re.UNICODE)